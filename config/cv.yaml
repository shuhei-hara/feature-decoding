# CV feature decoding

decoder:
  name: deeprecon_cv_fmriprep_pyfastl2lir_alpha100_allunits
  path: # path
  parameters:
    alpha: 100
    chunk_axis: 1

  fmri:
    name: decodertraining_fmap_volume_standard_prep
    subjects:
      - name: sub-A
        paths:
          - .../A_${decoder.fmri.name}.h5
      - name: sub-B
        paths:
          - .../B_${decoder.fmri.name}.h5
      - name: sub-C
        paths:
          - .../C_${decoder.fmri.name}.h5

    rois:
      - {name: V1,  select: ROI_standard_V1 = 1,  num: 500}
      - {name: V2,  select: ROI_standard_V2 = 1,  num: 500}
      - {name: V3,  select: ROI_standard_V3 = 1,  num: 500}
      - {name: V4, select: ROI_standard_V4 = 1, num: 500}
      - {name: LOC, select: ROI_standard_LOC = 1, num: 500}
      - {name: FFA, select: ROI_standard_FFA = 1, num: 500}
      - {name: PPA, select: ROI_standard_PPA = 1, num: 500}
      # - {name: LVC, select: ROI_standard_LVC = 1, num: 500}
      # - {name: HVC, select: ROI_standard_HVC = 1, num: 500}
      # - {name: VC,  select: ROI_standard_VC = 1,  num: 500}
    label_key: stimulus_name

  features:
    name: Alexnet
    paths:
      - # path
    layers:
      - conv1
      - conv2
      - conv3
      - conv4
      - conv5
      - fc6
      - fc7
      - fc8
    index_file: # path to index file 

decoded_feature:
  name: deeprecon_cv_fmriprep_pyfastl2lir_alpha100_allunits
  path: # path
  parameters:
    average_sample: true

  decoder:
    name: ${decoder.features.name}
    path: # path
    parameters:
      alpha: ${decoder.parameters.alpha}
      chunk_axis: ${decoder.parameters.chunk_axis}

  fmri:
    name: decodertraining_fmap_volume_standard_prep
    subjects:
      - name: sub-A
        paths:
          - .../A_${decoder.fmri.name}.h5
      - name: sub-B
        paths:
          - .../B_${decoder.fmri.name}.h5
      - name: sub-C
        paths:
          - .../C_${decoder.fmri.name}.h5
      
    rois:
      - {name: V1,  select: ROI_standard_V1 = 1}
      - {name: V2,  select: ROI_standard_V2 = 1}
      - {name: V3,  select: ROI_standard_V3 = 1}
      - {name: V4, select: ROI_standard_V4 = 1}
      - {name: LOC, select: ROI_standard_LOC = 1}
      - {name: FFA, select: ROI_standard_FFA = 1}
      - {name: PPA, select: ROI_standard_PPA = 1}
      # - {name: LVC, select: ROI_LVC = 1}
      # - {name: HVC, select: ROI_HVC = 1}
      # - {name: VC,  select: ROI_VC = 1}
    label_key: stimulus_name
    exclude_labels:

  features:
    name: Alexnet
    paths:
      - # path
    layers:
      - conv1
      - conv2
      - conv3
      - conv4
      - conv5
      - fc6
      - fc7
      - fc8

# Cross-validation setting
cv:
  # Key used to split training and test samples for cross-validation (e.g., 'Run')
  key: Run

  # Values of the key splitting training and test samples in each cross-validation fold.
  # If omitted, leave-one-out cross-validation will be performed based on values of `cv.key`.
  #
  # folds:
  #   - {
  #     name: fold1,
  #     train: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [1, 2, 3]
  #   }
  #   - {
  #     name: fold2,
  #     train: [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [4, 5, 6]
  #   }
  #   - {
  #     name: fold3,
  #     train: [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [7, 8, 9]
  #   }
  #   - {
  #     name: fold4,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [10, 11, 12]
  #   }
  #   - {
  #     name: fold5,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24],
  #     test:  [13, 14, 15]
  #   }
  #   - {
  #     name: fold6,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24],
  #     test:  [16, 17, 18]
  #   }
  #   - {
  #     name: fold7,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24],
  #     test:  [19, 20, 21]
  #   }
  #   - {
  #     name: fold8,
  #     train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],
  #     test:  [22, 23, 24]
  #   }

  # Alternative notation. Fold indexes are automatically assigned from front to back.
  #
  folds:
    # - train: [6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    #   test: [1, 2, 3, 4, 5]
    # - train: [1, 2, 3, 4, 5, 11, 12, 13, 14, 15]
    #   test: [6, 7, 8, 9, 10]
    # - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    #   test: [11, 12, 13, 14, 15]

    # - train: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    #   test: [1, 2, 3]
    # - train: [1, 2, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    #   test: [4, 5, 6]
    # - train: [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15]
    #   test: [7, 8, 9]
    # - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15]
    #   test: [10, 11, 12]
    # - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    #   test: [13, 14, 15]

    - train: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [1]
    - train: [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [2]
    - train: [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [3]
    - train: [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [4]
    - train: [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [5]
    - train: [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [6]
    - train: [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15]
      test: [7]
    - train: [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15]
      test: [8]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15]
      test: [9]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15]
      test: [10]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15]
      test: [11]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15]
      test: [12]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15]
      test: [13]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15]
      test: [14]
    - train: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
      test: [15]



  # In each CV fold, the training samples are removed if they have overlapping 
  # values of `cv exclusive key` with the test samples so that the training and
  # test samples do not have overlapping values for `cv exclusive key`.
  # Set `null` if not specified.
  #
  exclusive_key: category_index

subject: null